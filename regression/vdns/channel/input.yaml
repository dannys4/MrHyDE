%YAML 1.1
---
ANONYMOUS:
  verbosity: 0
  debug level: 0
  Mesh:
    dimension: 2
    element type: quad
    xmin: 0.0
    xmax: 5.0
    ymin: 0.0
    ymax: 1.0
    NX: 50
    NY: 10
  Physics:
    modules: VDNS 
    Dirichlet conditions:
      scalar data: true
      ux:
        bottom: 0.0
        top: 0.0
      uy:
        bottom: 0.0
        top: 0.0
      T:
        bottom: 1.0
        top: 1.0
      pr:
        left: 0.0
    Neumann conditions:
      ## We have traction boundary conditions for the VD equations
      ## The exact solution has du_x/dy = 1/2(1 - 2y) 
      ## inflow --> n = (-1,0), outflow --> n = (1,0)
      ## the pressure is zero ?? so
      ## t_x = \mu (du_x/dx n_x + du_x/dy n_y + du_x/dx n_x + du_y/dx n_y) = 0
      ## t_y = \mu (du_y/dx n_x + du_y/dy n_y + du_x/dy n_x + du_y/dy n_y) = \mu du_x/dy n_x
      ux:
        left: '0.0'
        right: '0.0'
      uy:
        left: '-.5*(1.-2.*y)'
        right: '.5*(1.-2.*y)'
    Initial conditions:
      scalar data: false
      ux: '0.0'
      uy: '0.0'
      pr: '0.0'
      T: '1.0'
    usePSPG: true
  Discretization:
    order:
      ux: 1
      uy: 1
      pr: 1
      T: 1
    quadrature: 2
  Solver:
    solver: steady-state
    use direct solver: true
  Analysis: 
    analysis type: forward
  Postprocess: 
    compute errors: true
    True solutions:
      ux: '0.5*y*(1.0-y)'
      uy: '0.0'
      pr: '0.0'
      T: '1.0'
  Functions:
    source ux: '1.0'
    rho: '1.0'
    mu: '1.0'
    cp: '1.0'
    lambda: '1.0'
  Parameters:
    ## these are not strictly needed for the "incompressible" case
    ## but for now the physics module requires they be defined
    ## dp0dt MUST be set to zero though.
    p0:
      type: scalar
      value: 1.0
      usage: inactive
    dp0dt:
      type: scalar
      value: 0.0
      usage: inactive
...
